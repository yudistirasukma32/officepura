<!DOCTYPE html>
<html>
<head>
  <title>[Office] PT PURA System</title>
  <link rel="icon" type="image/x-icon" href="https://office.puratrans.com/assets/logo.png">
  
  <%= stylesheet_link_tag 'chosen' %>
	<%= stylesheet_link_tag 'application', :media => "all" %>
	<%= stylesheet_link_tag 'tipsy' %>
	<%= stylesheet_link_tag 'ui-lightness/jquery-ui-1.10.4.custom.min.css' %>
	<%= stylesheet_link_tag 'font-awesome' %>
	<%= stylesheet_link_tag 'tablesorter' %>
	<%= stylesheet_link_tag 'fullcalendar' %>
	<%= stylesheet_link_tag 'jquery.jqplot.min'%>
	<%= content_for :css %>	 
	<style>

		/* The Modal (background) */
		.modal {
		display: none; /* Hidden by default */
		position: fixed; /* Stay in place */
		z-index: 1; /* Sit on top */
		padding-top: 100px; /* Location of the box */
		left: 0;
		top: 0;
		width: 100%; /* Full width */
		height: 100%; /* Full height */
		overflow: auto; /* Enable scroll if needed */
		background-color: rgb(0,0,0); /* Fallback color */
		background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
		}
		/* Modal Content */
		.modal-content {
		background-color: #d9d9d9;
		margin: auto;
		padding: 20px;
		border: 1px solid #888;
		width: 60%;
		height: 75vh;
		overflow-y: scroll
		}

		@media(min-width: 1200px){
			.modal-content {
				width: 40%;
			}
		}

		/* The Close Button */
		.close {
		color: #aaaaaa;
		float: right;
		font-size: 28px;
		font-weight: bold;
		}

		.close:hover,
		.close:focus {
		color: #000;
		text-decoration: none;
		cursor: pointer;
		}

		.success-btn {
			background-image: linear-gradient(#49c718, #16a71b) !important;
			border-color: #49c718 #49c718 #16a71b  !important;
		}

		.success-btn:hover,
		.success-btn:focus {
			background-image: linear-gradient(#16a71b, #16a71b) !important;
		}

		.grey-btn {
			background-image: linear-gradient(#8d8d8d, #4d4d4d) !important;
			border-color: #a2a2a2 #989898 #4d4d4d !important;
			border-radius: 100% !important;
		}

		.flex {
			display: flex;
		}
	</style>
<!--[if IE 7]>
  <%= stylesheet_link_tag 'font-awesome-ie7' %>
<![endif]-->
   	 	
  <%= csrf_meta_tags %>
  <%= content_for :css %>
</head>
<body>

<script>
	type = '';
</script>
<%= yield %>
<%= render "shared/msgbox" %>
<%= render "shared/footer" %>

<%= javascript_include_tag 'jquery-1.9.1.min.js' %>
<%= javascript_include_tag 'jquery.migrate.js' %>
<%= javascript_include_tag 'jquery.ujs.js' %>
<%= javascript_include_tag 'jquery-ui-1.10.4.custom.min.js' %>
<%= javascript_include_tag 'jquery.easing.1.3.js' %>
<%= javascript_include_tag 'jquery.datepicker.js' %>
<%= javascript_include_tag 'jquery.tipsy.js' %>
<%= javascript_include_tag 'jquery.metadata.js' %>
<%= javascript_include_tag 'fullcalendar.js' %>
<%= javascript_include_tag 'chosen.jquery.min.js' %>
<%= javascript_include_tag 'jquery.jqplot.min.js' %>
<%= javascript_include_tag 'jqplot/jqplot.canvasAxisLabelRenderer.js' %>
<%= javascript_include_tag 'jqplot/jqplot.canvasTextRenderer.js' %>
<%= javascript_include_tag 'jqplot/jqplot.barRenderer.js' %>
<%= javascript_include_tag 'jqplot/jqplot.categoryAxisRenderer.js' %>
<%= javascript_include_tag 'jqplot/jqplot.pointLabels.js' %>
<%= javascript_include_tag 'cms' %>
<%= javascript_include_tag 'tablesorter/jquery.tablesorter.js' %>
<%= javascript_include_tag 'tablesorter/jquery.tablesorter.widgets.js' %>
<%#= content_for :js %>

<script
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDwuoQZDV6IQ7fpPGvmgBqnueUSu6uB4qU&callback=initMap&libraries=places&v=weekly"
async
></script>
<script>
	
	function initMap() {
	
	var routelocationAddressEnd = document.getElementById("routelocation_address_end");
	var routelocationLongitudeEnd = document.getElementById("routelocation_longitude_end");
	var routelocationLatitudeEnd = document.getElementById("routelocation_latitude_end");
	if (document.getElementById("routelocation_longitude_end") == null) {
		return false;
	}
	if(routelocationLongitudeEnd.value != "" && routelocationLatitudeEnd.value != "") {
		var latlng = { lat: parseFloat(routelocationLatitudeEnd.value), lng: parseFloat(routelocationLongitudeEnd.value) };
	} else {
		var latlng = { lat: -7.2574719, lng: 112.7520883 }
	}

	  var map = new google.maps.Map(document.getElementById("map"), {
		center: latlng,
		zoom: 12,
		mapTypeControl: false,
	  });
	  var card = document.getElementById("pac-card");
	  var input = document.getElementById("pac-input");
	  var biasInputElement = document.getElementById("use-location-bias");
	  var strictBoundsInputElement = document.getElementById("use-strict-bounds");
	  var options = {
		fields: ["formatted_address", "geometry", "name"],
		strictBounds: false,
		types: ["establishment"],
	  };
	
	  map.controls[google.maps.ControlPosition.TOP_LEFT].push(card);
	
	  var autocomplete = new google.maps.places.Autocomplete(input, options);
 
	  autocomplete.bindTo("bounds", map);
	
	  var infowindow = new google.maps.InfoWindow();
	  var infowindowContent = document.getElementById("infowindow-content");
	


	  infowindow.setContent(infowindowContent);
	
	  var marker = new google.maps.Marker({map,anchorPoint: new google.maps.Point(0, -29) });
	  marker.setPosition(latlng);
	
	  autocomplete.addListener("place_changed", function() {
		infowindow.close();
		marker.setVisible(false);
	
		var place = autocomplete.getPlace();
	
		if (!place.geometry || !place.geometry.location) {
 
		  window.alert("No details available for input: '" + place.name + "'");
		  return;
		}
 
		if (place.geometry.viewport) {
		  map.fitBounds(place.geometry.viewport); 
		} else {
		  map.setCenter(place.geometry.location);
		  map.setZoom(17); 
		}
		routelocationAddressEnd.value = place.formatted_address;
	
		var locationCoordinate = place.geometry.location; 
		routelocationLatitudeEnd.value = locationCoordinate.lat();
		routelocationLongitudeEnd.value = locationCoordinate.lng();
 
	
		marker.setPosition(place.geometry.location);
		marker.setVisible(true);
		infowindowContent.children["place-name"].textContent = place.name;
		infowindowContent.children["place-address"].textContent = place.formatted_address;
		infowindow.open(map, marker);
	  });
	
	  initMap2()
	}


	function initMap2() {
	
		var routelocationAddressStart = document.getElementById("routelocation_address_start");
		var routelocationLongitudeStart = document.getElementById("routelocation_longitude_start");
		var routelocationLatitudeStart = document.getElementById("routelocation_latitude_start");
		if (document.getElementById("routelocation_longitude_start") == null) {
			return false;
		}
		if(routelocationLongitudeStart.value != "" && routelocationLatitudeStart.value != "") {
			var latlng = { lat: parseFloat(routelocationLatitudeStart.value), lng: parseFloat(routelocationLongitudeStart.value) };
		} else {
			var latlng = { lat: -7.2574719, lng: 112.7520883 }
		}
	
		  var map = new google.maps.Map(document.getElementById("map2"), {
			center: latlng,
			zoom: 12,
			mapTypeControl: false,
		  });
		  var card = document.getElementById("pac-card2");
		  var input = document.getElementById("pac-input2");
		  var biasInputElement = document.getElementById("use-location-bias2");
		  var strictBoundsInputElement = document.getElementById("use-strict-bounds2");
		  var options = {
			fields: ["formatted_address", "geometry", "name"],
			strictBounds: false,
			types: ["establishment"],
		  };
		
		  map.controls[google.maps.ControlPosition.TOP_LEFT].push(card);
		
		  var autocomplete = new google.maps.places.Autocomplete(input, options);
	 
		  autocomplete.bindTo("bounds", map);
		
		  var infowindow = new google.maps.InfoWindow();
		  var infowindowContent = document.getElementById("infowindow-content");
		
	
	
		  infowindow.setContent(infowindowContent);
		
		  var marker = new google.maps.Marker({map,anchorPoint: new google.maps.Point(0, -29) });
		  marker.setPosition(latlng);
		
		  autocomplete.addListener("place_changed", function() {
			infowindow.close();
			marker.setVisible(false);
		
			var place = autocomplete.getPlace();
		
			if (!place.geometry || !place.geometry.location) {
	 
			  window.alert("No details available for input: '" + place.name + "'");
			  return;
			}
	 
			if (place.geometry.viewport) {
			  map.fitBounds(place.geometry.viewport); 
			} else {
			  map.setCenter(place.geometry.location);
			  map.setZoom(17); 
			}
			routelocationAddressStart.value = place.formatted_address;
		
			var locationCoordinate = place.geometry.location; 
			routelocationLatitudeStart.value = locationCoordinate.lat();
			routelocationLongitudeStart.value = locationCoordinate.lng();
	 
		
			marker.setPosition(place.geometry.location);
			marker.setVisible(true);
			infowindowContent.children["place-name"].textContent = place.name;
			infowindowContent.children["place-address"].textContent = place.formatted_address;
			infowindow.open(map, marker);
		  });
		
		
		}

</script>
<%= content_for :js %>
</body>
</html>

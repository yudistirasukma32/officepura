<style>
  #description {
    font-family: Roboto;
    font-size: 15px;
    font-weight: 300;
  }

  #infowindow-content .title {
    font-weight: bold;
  }

  #infowindow-content {
    display: none;
  }

  #map #infowindow-content, #mapFinish #infowindow-content {
    display: inline;
  }

  .history {
    width: 40%;
    display: table-row;
  }
  .history label {
    display: table-cell;
    padding-right: 20px;
    line-height: 26px;
  }
  .history textarea {
    min-width: auto;
    max-width: 285px;
  }

  .pac-card, .pac-card2 {
    background-color: #fff;
    border: 0;
    border-radius: 2px;
    box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
    margin: 10px;
    padding: 0 0.5em;
    font: 400 18px Roboto, Arial, sans-serif;
    overflow: hidden;
    font-family: Roboto;
    padding: 0;
  }

  #pac-container, #pac-container2 {
    margin-top: -24px;
    padding-bottom: 16px;
    margin-right: 12px;
  }

  .pac-controls {
    display: inline-block;
    padding: 5px 11px;
  }

  .pac-controls label {
    font-family: Roboto;
    font-size: 13px;
    font-weight: 300;
  }

  #pac-input, #pac-input2 {
    background-color: #fff;
    font-family: Roboto;
    font-size: 15px;
    font-weight: 300;
    margin-left: 12px;
    padding: 0 11px 0 13px;
    text-overflow: ellipsis;
    width: 400px;
  }

  #pac-input:focus, #pac-input2:focus {
    border-color: #4d90fe;
  }

  #title {
    color: #fff;
    background-color: #4d90fe;
    font-size: 16px;
    font-weight: 500;
    padding: 6px 12px;
  }
</style>

<%= form_for(@quotation, :html => { :style => 'float: left; margin-right: 5rem;'}) do |f| %>
  <%= f.hidden_field :quotationgroup_id, value: @process == 'new' ? params['format'] : @quotationgroup.id %>

  <div class="field-row">
    <%= f.label :name, "Nama Jurusan" %>
    <%= f.text_field :name, :required => true%>
  </div>

  <%if @quotation.office_id %>
  <div class="field-row">
    <%= f.label :office_id, "Kantor" %>
    <%= f.select :office_id, options_for_select(Office.where(:deleted => false).order('id ASC').collect {|g| [g.name, g.id]}, @quotation.office_id), {}, :class => 'half chzn-select', :required => true%>
  </div>
  <% else %>
  <div class="field-row">
    <%= f.label :office_id, "Kantor" %>
    <%= f.select :office_id, options_for_select(Office.where(:deleted => false).order('id ASC').collect {|g| [g.name, g.id]}), {}, :class => 'half chzn-select', :required => true%>
  </div>
  <% end %>

  <div class="field-row">
  <%= f.label :transporttype, "Jenis Moda"  %>
  <%= f.select :transporttype, options_for_select(@transporttypes.collect {|w| [w, w]}, @quotation.transporttype), {}, { :class => 'half chzn-select' } %>
  </div>

  <div class="field-row">
    <%= f.label :routegroup_id, "Rute" %>
    <%= f.select :routegroup_id, options_for_select(Routegroup.active.order(:name).collect {|g| [g.name, g.id]}, @quotation.routegroup_id), {}, :class => 'half chzn-select half left' %>
  </div>

  <div class="field-row">
    <%= f.label :commodity_id, "Komoditas" %>
    <select id="quotation_commodity_id" name="quotation[commodity_id]" class="half left" required>

      <option value="">- Pilih Komoditas -</option>
      <% Commodity.active.order(:name).each do |commodity| %>
      <option value="<%=commodity.id%>"
        <% if commodity.id == @quotation.commodity_id %> selected="selected"<% end %>><%=commodity.name%></option>
      <% end %>
    </select>

    <%= f.label :distance, "Jarak", class: 'middle' %>
    <%= f.text_field :distance, class: 'half', onkeypress: 'javascript:return isNumberKey(this);', required: true, min: 1 %>
  </div>

  <div class="field-row">
    <%= f.label :price_per, "Tarif Muatan" %>
    <%= f.text_field :price_per, :class => 'half left', :onkeypress => 'javascript:return isMoneyKey(this);', :value => to_currency_bank(@quotation.price_per)  %>
    <%= f.label :price_per_type, "per", :class => 'middle' %>
    <%= f.select :price_per_type, options_for_select(@price_per_types.collect {|w| [w, w]}, @quotation.price_per_type), {}, { :class => 'half chzn-select' } %>
  </div>

  <div class="field-row">
    <%= f.label :description, "Keterangan" %>
    <%= f.text_area :description, rows: 2 %>
  </div>

    <%# GPS %>
    
  <div class="field-row">
    <div class="pac-card2" id="pac-card2">
      <div>
      <div id="title">Address Search</div>
        <div id="type-selector2" class="pac-controls2" style="opacity: 0;">
          <input type="radio" name="type" id="changetype-all2" checked="checked"/>
          <label for="changetype-all">All</label>
        </div>
      </div>
    <div id="pac-container2">
      <input id="pac-input2" type="text" placeholder="Enter a location" />
      <br/>
    </div>
  </div>

  <div class="field-row" style="background: none;">
    <h2 style="font-weight: bold;">Data Lokasi Penawaran</h2>
    <p>*Pengisian Longitude & Latitude harap menggunakan format Longitude/Latitude bukan GPS. <br/>Format Longitude dan latitude yg benar seperti : -7.329603 atau 112.752704</p>
    <p style="padding-bottom: 0;"><b>Peta Titik Start / Muat</b></p>
  </div>

  <div id="map2" style="height: 420px; width: 100%;"></div>
    <div id="infowindow-content">
      <span id="place-name" class="title"></span><br />
      <span id="place-address"></span>
    </div>
  </div>

  <div class="field-row">
    <p><b>Titik Start / Muat</b></p>
    <%= f.label :longitude_start, "Longitude" %>
    <%= f.text_field :longitude_start, :class => 'half left', :readonly => true %>
    <%= f.label :latitude_start, "Latitude", :class => 'middle' %>
    <%= f.text_field :latitude_start, :class => 'half', :readonly => true %>
  </div>

  <div class="field-row" style="margin-bottom:30px;">
    <%= f.label :address_start, "Alamat Titik Muat" %>
    <%= f.text_field :address_start %>
  </div>


  <div class="field-row">
    <p><b>Peta Titik Finish / Bongkar</b></p>
  </div>

  <div class="field-row">
    <div class="pac-card" id="pac-card">
      <div>
      <div id="title">Address Search</div>
        <div id="type-selector" class="pac-controls" style="opacity: 0;">
          <input type="radio" name="type" id="changetype-all" checked="checked"/>
          <label for="changetype-all">All</label>
        </div>
      </div>
    <div id="pac-container">
      <input id="pac-input" type="text" placeholder="Enter a location" />
      <br/>
    </div>
  </div>

  <div id="map" style="height: 420px; width: 100%;"></div>
    <div id="infowindow-content">
      <span id="place-name" class="title"></span><br />
      <span id="place-address"></span>
    </div>
  </div>

  <div class="field-row">
    <p><b>Titik Finish / Bongkar</b></p>
    <%= f.label :longitude_end, "Longitude" %>
    <%= f.text_field :longitude_end, :class => 'half left', :readonly => true %>
    <%= f.label :latitude_end, "Latitude", :class => 'middle' %>
    <%= f.text_field :latitude_end, :class => 'half', :readonly => true %>
  </div>

  <div class="field-row" style="margin-bottom:30px;">
    <%= f.label :address_end, "Alamat Titik Bongkar" %>
    <%= f.text_field :address_end %>
  </div>

  <div class="actions">
    <%= f.submit "Simpan Data", :class => 'left' if checkrole 'Admin Operasional, Marketing, Admin Marketing' %>
    <a class="back left" href="<%= quotations_url%>">Kembali ke Penawaran</a>
  </div>
<% end %>

<%# History %>
<%
if @logs.present?
  if @logs.any?
    @logs.each do |log|
    %>
      <div>
        <div>
          <h2 style="font-weight: bold">Sejarah Penawaran</h2>
        </div>
        
        <div>
          <h3><strong>Revisi : <%= log.created_at.strftime('%d-%m-%Y') %></strong> <%= log.created_at.strftime('%H:%M:%S') %></h3>
          <hr>
        </div>
        
        <div class="history">
          <label>Nama</label>
          <input class="half" readonly="readonly" size="30" type="text" value="<%= log.name %>">
        </div>
        <div class="history">
          <label>Tarif lama</label>
          <input class="half" readonly="readonly" size="30" type="text" value="<%= log.old_price_per %>">
        </div>
        <div class="history">
          <label>Tarif Baru</label>
          <input class="half" readonly="readonly" size="30" type="text" value="<%= log.new_price_per %>">
        </div>
        <div class="history">
          <label>Keterangan</label>
          <textarea class="half" readonly="readonly" size="30" type="text" value="<%= log.description %>"><%= log.description %></textarea>
        </div>

        <hr style="margin-top: 1rem;">
      </div>
    <%
    end
  end 
end%>

<%= content_for :js do %>
<script>
	
	function initMap() {
	
	var quotationAddressEnd = document.getElementById("quotation_address_end");
	var quotationLongitudeEnd = document.getElementById("quotation_longitude_end");
	var quotationLatitudeEnd = document.getElementById("quotation_latitude_end");
	if (document.getElementById("quotation_longitude_end") == null) {
		return false;
	}
	if(quotationLongitudeEnd.value != "" && quotationLatitudeEnd.value != "") {
		var latlng = { lat: parseFloat(quotationLatitudeEnd.value), lng: parseFloat(quotationLongitudeEnd.value) };
	} else {
		var latlng = { lat: -7.2574719, lng: 112.7520883 }
	}

	  var map = new google.maps.Map(document.getElementById("map"), {
		center: latlng,
		zoom: 12,
		mapTypeControl: false,
	  });
	  var card = document.getElementById("pac-card");
	  var input = document.getElementById("pac-input");
	  var biasInputElement = document.getElementById("use-location-bias");
	  var strictBoundsInputElement = document.getElementById("use-strict-bounds");
	  var options = {
		fields: ["formatted_address", "geometry", "name"],
		strictBounds: false,
		types: ["establishment"],
	  };
	
	  map.controls[google.maps.ControlPosition.TOP_LEFT].push(card);
	
	  var autocomplete = new google.maps.places.Autocomplete(input, options);
 
	  autocomplete.bindTo("bounds", map);
	
	  var infowindow = new google.maps.InfoWindow();
	  var infowindowContent = document.getElementById("infowindow-content");
	


	  infowindow.setContent(infowindowContent);
	
	  var marker = new google.maps.Marker({map,anchorPoint: new google.maps.Point(0, -29) });
	  marker.setPosition(latlng);
	
	  autocomplete.addListener("place_changed", function() {
		infowindow.close();
		marker.setVisible(false);
	
		var place = autocomplete.getPlace();
	
		if (!place.geometry || !place.geometry.location) {
 
		  window.alert("No details available for input: '" + place.name + "'");
		  return;
		}
 
		if (place.geometry.viewport) {
		  map.fitBounds(place.geometry.viewport); 
		} else {
		  map.setCenter(place.geometry.location);
		  map.setZoom(17); 
		}
		quotationAddressEnd.value = place.formatted_address;
	
		var locationCoordinate = place.geometry.location; 
		quotationLatitudeEnd.value = locationCoordinate.lat();
		quotationLongitudeEnd.value = locationCoordinate.lng();
 
	
		marker.setPosition(place.geometry.location);
		marker.setVisible(true);
		infowindowContent.children["place-name"].textContent = place.name;
		infowindowContent.children["place-address"].textContent = place.formatted_address;
		infowindow.open(map, marker);
	  });
	
	  initMap2()
	}


	function initMap2() {
	
		var quotationAddressStart = document.getElementById("quotation_address_start");
		var quotationLongitudeStart = document.getElementById("quotation_longitude_start");
		var quotationLatitudeStart = document.getElementById("quotation_latitude_start");
		if (document.getElementById("quotation_longitude_start") == null) {
			return false;
		}
		if(quotationLongitudeStart.value != "" && quotationLatitudeStart.value != "") {
			var latlng = { lat: parseFloat(quotationLatitudeStart.value), lng: parseFloat(quotationLongitudeStart.value) };
		} else {
			var latlng = { lat: -7.2574719, lng: 112.7520883 }
		}
	
		  var map = new google.maps.Map(document.getElementById("map2"), {
			center: latlng,
			zoom: 12,
			mapTypeControl: false,
		  });
		  var card = document.getElementById("pac-card2");
		  var input = document.getElementById("pac-input2");
		  var biasInputElement = document.getElementById("use-location-bias2");
		  var strictBoundsInputElement = document.getElementById("use-strict-bounds2");
		  var options = {
			fields: ["formatted_address", "geometry", "name"],
			strictBounds: false,
			types: ["establishment"],
		  };
		
		  map.controls[google.maps.ControlPosition.TOP_LEFT].push(card);
		
		  var autocomplete = new google.maps.places.Autocomplete(input, options);
	 
		  autocomplete.bindTo("bounds", map);
		
		  var infowindow = new google.maps.InfoWindow();
		  var infowindowContent = document.getElementById("infowindow-content");
		
	
	
		  infowindow.setContent(infowindowContent);
		
		  var marker = new google.maps.Marker({map,anchorPoint: new google.maps.Point(0, -29) });
		  marker.setPosition(latlng);
		
		  autocomplete.addListener("place_changed", function() {
			infowindow.close();
			marker.setVisible(false);
		
			var place = autocomplete.getPlace();
		
			if (!place.geometry || !place.geometry.location) {
	 
			  window.alert("No details available for input: '" + place.name + "'");
			  return;
			}
	 
			if (place.geometry.viewport) {
			  map.fitBounds(place.geometry.viewport); 
			} else {
			  map.setCenter(place.geometry.location);
			  map.setZoom(17); 
			}
			quotationAddressStart.value = place.formatted_address;
		
			var locationCoordinate = place.geometry.location; 
			quotationLatitudeStart.value = locationCoordinate.lat();
			quotationLongitudeStart.value = locationCoordinate.lng();
	 
		
			marker.setPosition(place.geometry.location);
			marker.setVisible(true);
			infowindowContent.children["place-name"].textContent = place.name;
			infowindowContent.children["place-address"].textContent = place.formatted_address;
			infowindow.open(map, marker);
		  });
		
		}
</script>
<% end %>